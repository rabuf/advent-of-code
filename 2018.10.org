#+STARTUP: indent contents
#+OPTIONS: num:nil toc:nil
* Day 10
** Executing this code
If you have a lisp installation, emacs, org-mode, and org-babel
support for lisp installed you can run this by:
1. Starting slime (=M-x slime=)
2. Typing =C-c C-c= in the block [[initialize][initialize]].
3. In the repl type =(in-package :aoc-2018-10)=
4. Typing =C-c C-c= in the block [[answers][answers]]
** Initial stuffs
*** Packages to load
#+NAME: packages
#+BEGIN_SRC lisp :results silent
  (unless (find-package :cl-ppcre)
    (ql:quickload "cl-ppcre"))
  (unless (find-package :iterate)
    (ql:quickload "iterate"))
  (unless (find-package :parseq)
    (ql:quickload "parseq"))
  (unless (find-package :fiveam)
    (ql:quickload "fiveam"))
#+END_SRC
*** Create package for this day
#+NAME: initialize
#+BEGIN_SRC lisp :noweb yes :results silent
  <<packages>>
  (defpackage :aoc-2018-10
    (:use :common-lisp
          :iterate
          :parseq
          :fiveam)
    (:export :problem-a
             :problem-b))
  (in-package :aoc-2018-10)
#+END_SRC
** Input
The input is a list of positions and velocities. I'll parse this
quickly using ppcre.
#+NAME: parse-line
#+BEGIN_SRC lisp :results silent
  (defun parse-line (line)
    (destructuring-bind (x y dx dy)
        (mapcar #'parse-integer (ppcre:all-matches-as-strings "(-?\\d+)" line))
      (list (complex x y) (complex dx dy))))
#+END_SRC
#+NAME: read-input
#+BEGIN_SRC lisp :results silent
  (defun read-input (file)
    (iter (for line in-file file using #'read-line)
          (collect (parse-line line))))
#+END_SRC
#+NAME: input
#+BEGIN_SRC lisp :noweb yes :results silent
  (defparameter *input*
    (read-input "input/10.txt"))
#+END_SRC
** Part 1
Alright, so I'm going to take the given values and create a list of
pairs: position and velocity. Each position is lit up. So now I need a
way to print the current status.
#+NAME: print-lights
#+BEGIN_SRC lisp :results silent
  (defun minx (lights)
    (iter (for (p v) in lights)
          (minimize (realpart p))))
  (defun maxx (lights)
      (iter (for (p v) in lights)
          (maximize (realpart p))))
  (defun miny (lights)
    (iter (for (p v) in lights)
          (minimize (imagpart p))))
  (defun maxy (lights)
      (iter (for (p v) in lights)
          (maximize (imagpart p))))
  (defun print-lights (lights)
    (iter (for y from (miny lights) to (maxy lights))
          (iter (for x from (minx lights) to (maxx lights))
                (if (find (complex x y) lights :key #'car)
                    (format t "#")
                    (format t ".")))
          (format t "~%")))
#+END_SRC
I cannot see anything in this that's wrong. But I can't get the
correct test output.

The problem was in the parser, I searched on "(\\d+)" which wouldn't,
naturally, find negative numbers. Brilliant.
#+NAME: increment-lights
#+BEGIN_SRC lisp :results silent
  (defun increment-lights (lights)
    (iter (for (p v) in lights)
          (collect (list (+ p v) v))))
#+END_SRC
I still don't want to print out each option. Instead, I'm going to do
an execution (through 100,000 steps) and find the minimum
height. Given that, I'll again iterate and then print out that one.
#+BEGIN_SRC lisp :results output :exports both
  (let ((lights *input*))
    (iter (for i from 0 to 100000)
          (let ((maxx (maxx lights))
                (minx (minx lights))
                (maxy (maxy lights))
                (miny (miny lights)))
            (declare (ignore minx maxx))
            (if (<  (abs (- maxy miny)) 40)
                (format t "Possible at t = ~A ~A~%" i (- maxy miny))))
          (setf lights (increment-lights lights))))
#+END_SRC

#+RESULTS:
: Possible at t = 10388 39
: Possible at t = 10389 29
: Possible at t = 10390 19
: Possible at t = 10391 9
: Possible at t = 10392 18
: Possible at t = 10393 28
: Possible at t = 10394 38

So the minimum height happens at t = 10391.

#+BEGIN_SRC lisp :results output :exports both
  (let ((lights *input*))
    (iter (for i from 0 to 10392)
          (when (= i 10391)
            (format t "Iteration ~A:~%" i)
            (print-lights lights))
          (setf lights (increment-lights lights))))
#+END_SRC

#+RESULTS:
#+begin_example
Iteration 10391:
#####...######..######..######...####...#....#..#....#..######
#....#..#.......#............#..#....#..##...#..#....#..#.....
#....#..#.......#............#..#.......##...#...#..#...#.....
#....#..#.......#...........#...#.......#.#..#...#..#...#.....
#####...#####...#####......#....#.......#.#..#....##....#####.
#....#..#.......#.........#.....#.......#..#.#....##....#.....
#....#..#.......#........#......#.......#..#.#...#..#...#.....
#....#..#.......#.......#.......#.......#...##...#..#...#.....
#....#..#.......#.......#.......#....#..#...##..#....#..#.....
#####...#.......#.......######...####...#....#..#....#..######
#+end_example

#+NAME: problem-a
#+BEGIN_SRC lisp :noweb yes :results silent
  (defun problem-a () (format t "Problem 10 A: ~a~%" nil))
#+END_SRC
** Part 2
Amusingly, part 2 wants to know how long it would take to get that
result and we already have it calculated. This was a relatively easy
one once I got the parsing issues out of the way.
#+NAME: problem-b
#+BEGIN_SRC lisp :noweb yes :results silent
  (defun problem-b () (format t "Problem 10 B: ~a~%" (identity *input*)))
#+END_SRC
** Putting it all together
#+NAME: structs
#+BEGIN_SRC lisp :noweb yes :results silent

#+END_SRC
#+NAME: functions
#+BEGIN_SRC lisp :noweb yes :results silentn
  <<parse-line>>
  <<read-input>>
  <<print-lights>>
  <<increment-lights>>
#+END_SRC
#+NAME: answers
#+BEGIN_SRC lisp :results output :exports both :noweb yes :tangle 2018.10.lisp
  <<initialize>>
  <<functions>>
  <<input>>
  <<problem-a>>
  <<problem-b>>
  (problem-a)
  (problem-b)
#+END_SRC
** Answer
#+RESULTS: answers
#+begin_example
Problem 10 A: ((#C(31351 -51811) #C(-3 5)) (#C(21001 31317) #C(-2 -3))
               (#C(-41347 -41423) #C(4 4)) (#C(-20557 52103) #C(2 -5))
               (#C(-30975 41713) #C(3 -4)) (#C(10618 -20633) #C(-1 2))
               (#C(31358 -10242) #C(-3 1)) (#C(10564 -10247) #C(-1 1))
               (#C(-20586 -31033) #C(2 3)) (#C(10617 52095) #C(-1 -5))
               (#C(-30972 -51814) #C(3 5)) (#C(21000 -10244) #C(-2 1))
               (#C(-30968 20931) #C(3 -2)) (#C(-20573 20926) #C(2 -2))
               (#C(-10222 -41421) #C(1 4)) (#C(10561 10531) #C(-1 -1))
               (#C(-10202 -31033) #C(1 3)) (#C(-31004 -20633) #C(3 2))
               (#C(-51734 10533) #C(5 -1)) (#C(-10198 10540) #C(1 -1))
               (#C(52168 20930) #C(-5 -2)) (#C(-31001 -31024) #C(3 3))
               (#C(-10201 52095) #C(1 -5)) (#C(52124 20926) #C(-5 -2))
               (#C(-20573 -20641) #C(2 2)) (#C(-10190 20927) #C(1 -2))
               (#C(52129 -31026) #C(-5 3)) (#C(10568 31315) #C(-1 -3))
               (#C(52126 41704) #C(-5 -4)) (#C(-20610 52095) #C(2 -5))
               (#C(10568 10540) #C(-1 -1)) (#C(-30988 -20639) #C(3 2))
               (#C(31347 10537) #C(-3 -1)) (#C(10579 20926) #C(-1 -2))
               (#C(-20605 31322) #C(2 -3)) (#C(31382 31319) #C(-3 -3))
               (#C(20979 -20633) #C(-2 2)) (#C(-30976 20931) #C(3 -2))
               (#C(20996 10536) #C(-2 -1)) (#C(10604 10538) #C(-1 -1))
               (#C(-20553 -31024) #C(2 3)) (#C(-41338 -10242) #C(4 1))
               (#C(41765 41708) #C(-4 -4)) (#C(21007 -31029) #C(-2 3))
               (#C(41758 -20642) #C(-4 2)) (#C(-51743 -41419) #C(5 4))
               (#C(-10171 -41420) #C(1 4)) (#C(31366 -51808) #C(-3 5))
               (#C(-51741 -20635) #C(5 2)) (#C(10569 41708) #C(-1 -4))
               (#C(41741 52104) #C(-4 -5)) (#C(52144 -20642) #C(-5 2))
               (#C(41762 10540) #C(-4 -1)) (#C(41733 -31030) #C(-4 3))
               (#C(31369 10540) #C(-3 -1)) (#C(-10196 -41415) #C(1 4))
               (#C(31391 -20635) #C(-3 2)) (#C(21002 31317) #C(-2 -3))
               (#C(-51770 -31026) #C(5 3)) (#C(-20587 10531) #C(2 -1))
               (#C(31395 -10250) #C(-3 1)) (#C(41786 41712) #C(-4 -4))
               (#C(41789 20931) #C(-4 -2)) (#C(20967 52100) #C(-2 -5))
               (#C(10605 31320) #C(-1 -3)) (#C(10609 -20640) #C(-1 2))
               (#C(52153 -20641) #C(-5 2)) (#C(-31004 20928) #C(3 -2))
               (#C(41778 31320) #C(-4 -3)) (#C(-41363 52099) #C(4 -5))
               (#C(41737 31317) #C(-4 -3)) (#C(41758 52101) #C(-4 -5))
               (#C(-51786 -51811) #C(5 5)) (#C(21002 -31029) #C(-2 3))
               (#C(41765 -31027) #C(-4 3)) (#C(-20565 52103) #C(2 -5))
               (#C(21007 -10245) #C(-2 1)) (#C(52124 -10243) #C(-5 1))
               (#C(41753 -41420) #C(-4 4)) (#C(-51754 20924) #C(5 -2))
               (#C(-30964 -51812) #C(3 5)) (#C(41775 -20639) #C(-4 2))
               (#C(31395 41713) #C(-3 -4)) (#C(21007 -10244) #C(-2 1))
               (#C(10592 20927) #C(-1 -2)) (#C(-41377 -10247) #C(4 1))
               (#C(-20557 10532) #C(2 -1)) (#C(41733 20928) #C(-4 -2))
               (#C(-51781 -10243) #C(5 1)) (#C(10593 41713) #C(-1 -4))
               (#C(-41379 -10242) #C(4 1)) (#C(-51783 31313) #C(5 -3))
               (#C(-41337 -41420) #C(4 4)) (#C(-41338 -20638) #C(4 2))
               (#C(41749 52100) #C(-4 -5)) (#C(52142 52095) #C(-5 -5))
               (#C(10612 10533) #C(-1 -1)) (#C(31391 -51812) #C(-3 5))
               (#C(52125 -41424) #C(-5 4)) (#C(10612 -41418) #C(-1 4))
               (#C(31342 20929) #C(-3 -2)) (#C(-51770 -20638) #C(5 2))
               (#C(41750 -10247) #C(-4 1)) (#C(20951 -10247) #C(-2 1))
               (#C(-20557 -10244) #C(2 1)) (#C(-41363 20929) #C(4 -2))
               (#C(41782 -20636) #C(-4 2)) (#C(41746 52095) #C(-4 -5))
               (#C(10576 52103) #C(-1 -5)) (#C(-10198 -31026) #C(1 3))
               (#C(31387 -10242) #C(-3 1)) (#C(-51758 41704) #C(5 -4))
               (#C(52148 52095) #C(-5 -5)) (#C(-31004 -10250) #C(3 1))
               (#C(-41358 20930) #C(4 -2)) (#C(-41386 -31033) #C(4 3))
               (#C(31387 10535) #C(-3 -1)) (#C(-30996 52101) #C(3 -5))
               (#C(10619 20926) #C(-1 -2)) (#C(41754 41704) #C(-4 -4))
               (#C(-41339 31318) #C(4 -3)) (#C(41761 -31030) #C(-4 3))
               (#C(-20608 31320) #C(2 -3)) (#C(10560 -31028) #C(-1 3))
               (#C(-30972 41706) #C(3 -4)) (#C(21004 -51807) #C(-2 5))
               (#C(52125 41713) #C(-5 -4)) (#C(-41355 41709) #C(4 -4))
               (#C(52176 20928) #C(-5 -2)) (#C(-10188 10540) #C(1 -1))
               (#C(-20557 -31027) #C(2 3)) (#C(52132 52096) #C(-5 -5))
               (#C(52140 20930) #C(-5 -2)) (#C(10584 -10243) #C(-1 1))
               (#C(-30943 -51815) #C(3 5)) (#C(-30947 -31024) #C(3 3))
               (#C(31378 52095) #C(-3 -5)) (#C(-20571 -10248) #C(2 1))
               (#C(20999 31314) #C(-2 -3)) (#C(-30963 -51813) #C(3 5))
               (#C(31390 -41415) #C(-3 4)) (#C(-20609 -41420) #C(2 4))
               (#C(10568 31318) #C(-1 -3)) (#C(31342 20923) #C(-3 -2))
               (#C(31347 -20641) #C(-3 2)) (#C(-10193 -20642) #C(1 2))
               (#C(-41347 10532) #C(4 -1)) (#C(-41379 10533) #C(4 -1))
               (#C(20959 20929) #C(-2 -2)) (#C(52135 -20642) #C(-5 2))
               (#C(41761 31316) #C(-4 -3)) (#C(-20568 10531) #C(2 -1))
               (#C(-10193 -20640) #C(1 2)) (#C(-41342 41705) #C(4 -4))
               (#C(-20568 41704) #C(2 -4)) (#C(41745 10535) #C(-4 -1))
               (#C(-20603 10531) #C(2 -1)) (#C(52157 -10251) #C(-5 1))
               (#C(52142 -10247) #C(-5 1)) (#C(10576 -31030) #C(-1 3))
               (#C(41750 52099) #C(-4 -5)) (#C(31390 10540) #C(-3 -1))
               (#C(-51781 41705) #C(5 -4)) (#C(10600 -10242) #C(-1 1))
               (#C(41737 -20642) #C(-4 2)) (#C(-41370 -41415) #C(4 4))
               (#C(20980 -10250) #C(-2 1)) (#C(21007 31321) #C(-2 -3))
               (#C(10562 -20642) #C(-1 2)) (#C(-30952 -41417) #C(3 4))
               (#C(-31004 52104) #C(3 -5)) (#C(52129 10532) #C(-5 -1))
               (#C(-51730 -41424) #C(5 4)) (#C(-20613 -51808) #C(2 5))
               (#C(-10214 41706) #C(1 -4)) (#C(-41368 -20633) #C(4 2))
               (#C(31403 31322) #C(-3 -3)) (#C(52153 20922) #C(-5 -2))
               (#C(-51736 -41419) #C(5 4)) (#C(10568 -20642) #C(-1 2))
               (#C(41741 -20641) #C(-4 2)) (#C(41743 -10251) #C(-4 1))
               (#C(-30944 -31024) #C(3 3)) (#C(20956 10538) #C(-2 -1))
               (#C(-41350 20931) #C(4 -2)) (#C(-30992 -51811) #C(3 5))
               (#C(-31001 31313) #C(3 -3)) (#C(20959 41709) #C(-2 -4))
               (#C(-10214 -41420) #C(1 4)) (#C(-51766 -20638) #C(5 2))
               (#C(52140 20923) #C(-5 -2)) (#C(31358 31314) #C(-3 -3))
               (#C(20956 31315) #C(-2 -3)) (#C(41789 -31031) #C(-4 3))
               (#C(-20585 -41415) #C(2 4)) (#C(31390 10539) #C(-3 -1))
               (#C(31370 20922) #C(-3 -2)) (#C(-30970 31322) #C(3 -3))
               (#C(41785 31320) #C(-4 -3)) (#C(-10162 -41415) #C(1 4))
               (#C(-20569 31320) #C(2 -3)) (#C(52177 41704) #C(-5 -4))
               (#C(21009 31317) #C(-2 -3)) (#C(31345 -41420) #C(-3 4))
               (#C(-41335 52099) #C(4 -5)) (#C(-51733 -20634) #C(5 2))
               (#C(-41345 -51811) #C(4 5)) (#C(-41368 -20638) #C(4 2))
               (#C(-10203 -41424) #C(1 4)) (#C(-20597 -51809) #C(2 5))
               (#C(-51778 -41418) #C(5 4)) (#C(31400 41704) #C(-3 -4))
               (#C(41734 -31029) #C(-4 3)) (#C(52184 -31029) #C(-5 3))
               (#C(20967 41707) #C(-2 -4)) (#C(-51746 31315) #C(5 -3))
               (#C(10600 -41417) #C(-1 4)) (#C(41775 -31030) #C(-4 3))
               (#C(21010 -41415) #C(-2 4)) (#C(-10166 41707) #C(1 -4))
               (#C(52166 41708) #C(-5 -4)) (#C(-41355 -31027) #C(4 3))
               (#C(-20597 -31028) #C(2 3)) (#C(31355 31313) #C(-3 -3))
               (#C(-30972 -41422) #C(3 4)) (#C(-51725 20922) #C(5 -2))
               (#C(31382 20930) #C(-3 -2)) (#C(-30946 -51811) #C(3 5))
               (#C(52132 -20640) #C(-5 2)) (#C(-10177 -51814) #C(1 5))
               (#C(10605 -20633) #C(-1 2)) (#C(31376 -20642) #C(-3 2))
               (#C(-20573 52095) #C(2 -5)) (#C(-41358 52096) #C(4 -5))
               (#C(-10218 -41415) #C(1 4)) (#C(52180 31321) #C(-5 -3))
               (#C(10605 20927) #C(-1 -2)) (#C(-20557 -41418) #C(2 4))
               (#C(52164 20928) #C(-5 -2)) (#C(10565 10539) #C(-1 -1))
               (#C(31395 -51815) #C(-3 5)) (#C(20967 -20635) #C(-2 2))
               (#C(20967 10538) #C(-2 -1)) (#C(10562 10535) #C(-1 -1))
               (#C(-20605 20925) #C(2 -2)) (#C(-30948 -31024) #C(3 3))
               (#C(-10206 52099) #C(1 -5)) (#C(-10217 -51810) #C(1 5))
               (#C(10596 10531) #C(-1 -1)) (#C(20977 -51810) #C(-2 5))
               (#C(-10213 -10247) #C(1 1)) (#C(31378 -10242) #C(-3 1))
               (#C(10580 -51811) #C(-1 5)) (#C(-30999 41710) #C(3 -4))
               (#C(-41387 31318) #C(4 -3)) (#C(31374 52096) #C(-3 -5))
               (#C(52169 10531) #C(-5 -1)) (#C(-30994 -31029) #C(3 3))
               (#C(41777 -41416) #C(-4 4)) (#C(21004 -31024) #C(-2 3))
               (#C(41736 -20633) #C(-4 2)) (#C(10579 20922) #C(-1 -2))
               (#C(-41387 -51808) #C(4 5)) (#C(-20561 10534) #C(2 -1))
               (#C(-51728 -31033) #C(5 3)) (#C(31352 20922) #C(-3 -2))
               (#C(-30944 41704) #C(3 -4)) (#C(52135 41708) #C(-5 -4))
               (#C(-30948 -10242) #C(3 1)) (#C(-20568 -41423) #C(2 4))
               (#C(41753 -31033) #C(-4 3)) (#C(31360 52095) #C(-3 -5))
               (#C(-41338 31317) #C(4 -3)) (#C(20975 20922) #C(-2 -2))
               (#C(20951 41706) #C(-2 -4)) (#C(-51746 -20639) #C(5 2))
               (#C(10587 -10247) #C(-1 1)) (#C(-51778 -20638) #C(5 2))
               (#C(-51741 20925) #C(5 -2)) (#C(10605 41710) #C(-1 -4))
               (#C(-51781 52100) #C(5 -5)) (#C(10600 31314) #C(-1 -3))
               (#C(-51778 -31025) #C(5 3)) (#C(-51778 -41418) #C(5 4))
               (#C(10592 -10248) #C(-1 1)) (#C(-10177 20924) #C(1 -2))
               (#C(-10185 31321) #C(1 -3)) (#C(20987 -41415) #C(-2 4))
               (#C(-10211 52095) #C(1 -5)) (#C(20986 -10251) #C(-2 1))
               (#C(-10218 -41424) #C(1 4)) (#C(-10181 31314) #C(1 -3))
               (#C(-51760 -31028) #C(5 3)) (#C(41759 -41415) #C(-4 4))
               (#C(-30954 -51811) #C(3 5)) (#C(-31004 20922) #C(3 -2))
               (#C(52164 52100) #C(-5 -5)) (#C(-30964 -31031) #C(3 3))
               (#C(31358 -41420) #C(-3 4)) (#C(52141 41704) #C(-5 -4))
               (#C(10585 -51815) #C(-1 5)) (#C(-20557 -51812) #C(2 5))
               (#C(-10169 -10251) #C(1 1)) (#C(10576 52095) #C(-1 -5))
               (#C(-10170 41707) #C(1 -4)) (#C(31363 -41424) #C(-3 4))
               (#C(-41339 20927) #C(4 -2)) (#C(-30978 52095) #C(3 -5))
               (#C(-51786 -10245) #C(5 1)) (#C(-41371 31322) #C(4 -3))
               (#C(-30996 20925) #C(3 -2)) (#C(31374 20930) #C(-3 -2))
               (#C(52175 -10246) #C(-5 1)) (#C(31374 41710) #C(-3 -4))
               (#C(-10182 52099) #C(1 -5)) (#C(-10206 41713) #C(1 -4))
               (#C(-20557 -31026) #C(2 3)) (#C(31377 52104) #C(-3 -5))
               (#C(10608 -41424) #C(-1 4)) (#C(-30964 -20638) #C(3 2))
               (#C(-51741 -10243) #C(5 1)) (#C(52156 31321) #C(-5 -3))
               (#C(31354 31313) #C(-3 -3)) (#C(20980 20922) #C(-2 -2))
               (#C(-20556 -10242) #C(2 1)) (#C(52129 -20636) #C(-5 2))
               (#C(20976 41704) #C(-2 -4)) (#C(-10198 41712) #C(1 -4))
               (#C(31394 -41417) #C(-3 4)) (#C(-20573 52098) #C(2 -5))
               (#C(-41350 20928) #C(4 -2)) (#C(52156 10532) #C(-5 -1))
               (#C(-31002 20926) #C(3 -2)) (#C(-30999 10534) #C(3 -1))
               (#C(52177 52104) #C(-5 -5)) (#C(-30978 31322) #C(3 -3))
               (#C(-30959 31318) #C(3 -3)) (#C(-51741 -31031) #C(5 3))
               (#C(31344 -10242) #C(-3 1)) (#C(-41386 -10251) #C(4 1))
               (#C(41738 -10243) #C(-4 1)) (#C(41778 -10245) #C(-4 1))
               (#C(41774 -41422) #C(-4 4)) (#C(-10166 20927) #C(1 -2))
               (#C(21011 41708) #C(-2 -4)) (#C(-30988 -31027) #C(3 3))
               (#C(-41339 -51815) #C(4 5)) (#C(31385 -10245) #C(-3 1))
               (#C(-41369 52095) #C(4 -5)) (#C(52129 10533) #C(-5 -1))
               (#C(21010 -41424) #C(-2 4)) (#C(-30964 10533) #C(3 -1)))
Problem 10 B: ((#C(31351 -51811) #C(-3 5)) (#C(21001 31317) #C(-2 -3))
               (#C(-41347 -41423) #C(4 4)) (#C(-20557 52103) #C(2 -5))
               (#C(-30975 41713) #C(3 -4)) (#C(10618 -20633) #C(-1 2))
               (#C(31358 -10242) #C(-3 1)) (#C(10564 -10247) #C(-1 1))
               (#C(-20586 -31033) #C(2 3)) (#C(10617 52095) #C(-1 -5))
               (#C(-30972 -51814) #C(3 5)) (#C(21000 -10244) #C(-2 1))
               (#C(-30968 20931) #C(3 -2)) (#C(-20573 20926) #C(2 -2))
               (#C(-10222 -41421) #C(1 4)) (#C(10561 10531) #C(-1 -1))
               (#C(-10202 -31033) #C(1 3)) (#C(-31004 -20633) #C(3 2))
               (#C(-51734 10533) #C(5 -1)) (#C(-10198 10540) #C(1 -1))
               (#C(52168 20930) #C(-5 -2)) (#C(-31001 -31024) #C(3 3))
               (#C(-10201 52095) #C(1 -5)) (#C(52124 20926) #C(-5 -2))
               (#C(-20573 -20641) #C(2 2)) (#C(-10190 20927) #C(1 -2))
               (#C(52129 -31026) #C(-5 3)) (#C(10568 31315) #C(-1 -3))
               (#C(52126 41704) #C(-5 -4)) (#C(-20610 52095) #C(2 -5))
               (#C(10568 10540) #C(-1 -1)) (#C(-30988 -20639) #C(3 2))
               (#C(31347 10537) #C(-3 -1)) (#C(10579 20926) #C(-1 -2))
               (#C(-20605 31322) #C(2 -3)) (#C(31382 31319) #C(-3 -3))
               (#C(20979 -20633) #C(-2 2)) (#C(-30976 20931) #C(3 -2))
               (#C(20996 10536) #C(-2 -1)) (#C(10604 10538) #C(-1 -1))
               (#C(-20553 -31024) #C(2 3)) (#C(-41338 -10242) #C(4 1))
               (#C(41765 41708) #C(-4 -4)) (#C(21007 -31029) #C(-2 3))
               (#C(41758 -20642) #C(-4 2)) (#C(-51743 -41419) #C(5 4))
               (#C(-10171 -41420) #C(1 4)) (#C(31366 -51808) #C(-3 5))
               (#C(-51741 -20635) #C(5 2)) (#C(10569 41708) #C(-1 -4))
               (#C(41741 52104) #C(-4 -5)) (#C(52144 -20642) #C(-5 2))
               (#C(41762 10540) #C(-4 -1)) (#C(41733 -31030) #C(-4 3))
               (#C(31369 10540) #C(-3 -1)) (#C(-10196 -41415) #C(1 4))
               (#C(31391 -20635) #C(-3 2)) (#C(21002 31317) #C(-2 -3))
               (#C(-51770 -31026) #C(5 3)) (#C(-20587 10531) #C(2 -1))
               (#C(31395 -10250) #C(-3 1)) (#C(41786 41712) #C(-4 -4))
               (#C(41789 20931) #C(-4 -2)) (#C(20967 52100) #C(-2 -5))
               (#C(10605 31320) #C(-1 -3)) (#C(10609 -20640) #C(-1 2))
               (#C(52153 -20641) #C(-5 2)) (#C(-31004 20928) #C(3 -2))
               (#C(41778 31320) #C(-4 -3)) (#C(-41363 52099) #C(4 -5))
               (#C(41737 31317) #C(-4 -3)) (#C(41758 52101) #C(-4 -5))
               (#C(-51786 -51811) #C(5 5)) (#C(21002 -31029) #C(-2 3))
               (#C(41765 -31027) #C(-4 3)) (#C(-20565 52103) #C(2 -5))
               (#C(21007 -10245) #C(-2 1)) (#C(52124 -10243) #C(-5 1))
               (#C(41753 -41420) #C(-4 4)) (#C(-51754 20924) #C(5 -2))
               (#C(-30964 -51812) #C(3 5)) (#C(41775 -20639) #C(-4 2))
               (#C(31395 41713) #C(-3 -4)) (#C(21007 -10244) #C(-2 1))
               (#C(10592 20927) #C(-1 -2)) (#C(-41377 -10247) #C(4 1))
               (#C(-20557 10532) #C(2 -1)) (#C(41733 20928) #C(-4 -2))
               (#C(-51781 -10243) #C(5 1)) (#C(10593 41713) #C(-1 -4))
               (#C(-41379 -10242) #C(4 1)) (#C(-51783 31313) #C(5 -3))
               (#C(-41337 -41420) #C(4 4)) (#C(-41338 -20638) #C(4 2))
               (#C(41749 52100) #C(-4 -5)) (#C(52142 52095) #C(-5 -5))
               (#C(10612 10533) #C(-1 -1)) (#C(31391 -51812) #C(-3 5))
               (#C(52125 -41424) #C(-5 4)) (#C(10612 -41418) #C(-1 4))
               (#C(31342 20929) #C(-3 -2)) (#C(-51770 -20638) #C(5 2))
               (#C(41750 -10247) #C(-4 1)) (#C(20951 -10247) #C(-2 1))
               (#C(-20557 -10244) #C(2 1)) (#C(-41363 20929) #C(4 -2))
               (#C(41782 -20636) #C(-4 2)) (#C(41746 52095) #C(-4 -5))
               (#C(10576 52103) #C(-1 -5)) (#C(-10198 -31026) #C(1 3))
               (#C(31387 -10242) #C(-3 1)) (#C(-51758 41704) #C(5 -4))
               (#C(52148 52095) #C(-5 -5)) (#C(-31004 -10250) #C(3 1))
               (#C(-41358 20930) #C(4 -2)) (#C(-41386 -31033) #C(4 3))
               (#C(31387 10535) #C(-3 -1)) (#C(-30996 52101) #C(3 -5))
               (#C(10619 20926) #C(-1 -2)) (#C(41754 41704) #C(-4 -4))
               (#C(-41339 31318) #C(4 -3)) (#C(41761 -31030) #C(-4 3))
               (#C(-20608 31320) #C(2 -3)) (#C(10560 -31028) #C(-1 3))
               (#C(-30972 41706) #C(3 -4)) (#C(21004 -51807) #C(-2 5))
               (#C(52125 41713) #C(-5 -4)) (#C(-41355 41709) #C(4 -4))
               (#C(52176 20928) #C(-5 -2)) (#C(-10188 10540) #C(1 -1))
               (#C(-20557 -31027) #C(2 3)) (#C(52132 52096) #C(-5 -5))
               (#C(52140 20930) #C(-5 -2)) (#C(10584 -10243) #C(-1 1))
               (#C(-30943 -51815) #C(3 5)) (#C(-30947 -31024) #C(3 3))
               (#C(31378 52095) #C(-3 -5)) (#C(-20571 -10248) #C(2 1))
               (#C(20999 31314) #C(-2 -3)) (#C(-30963 -51813) #C(3 5))
               (#C(31390 -41415) #C(-3 4)) (#C(-20609 -41420) #C(2 4))
               (#C(10568 31318) #C(-1 -3)) (#C(31342 20923) #C(-3 -2))
               (#C(31347 -20641) #C(-3 2)) (#C(-10193 -20642) #C(1 2))
               (#C(-41347 10532) #C(4 -1)) (#C(-41379 10533) #C(4 -1))
               (#C(20959 20929) #C(-2 -2)) (#C(52135 -20642) #C(-5 2))
               (#C(41761 31316) #C(-4 -3)) (#C(-20568 10531) #C(2 -1))
               (#C(-10193 -20640) #C(1 2)) (#C(-41342 41705) #C(4 -4))
               (#C(-20568 41704) #C(2 -4)) (#C(41745 10535) #C(-4 -1))
               (#C(-20603 10531) #C(2 -1)) (#C(52157 -10251) #C(-5 1))
               (#C(52142 -10247) #C(-5 1)) (#C(10576 -31030) #C(-1 3))
               (#C(41750 52099) #C(-4 -5)) (#C(31390 10540) #C(-3 -1))
               (#C(-51781 41705) #C(5 -4)) (#C(10600 -10242) #C(-1 1))
               (#C(41737 -20642) #C(-4 2)) (#C(-41370 -41415) #C(4 4))
               (#C(20980 -10250) #C(-2 1)) (#C(21007 31321) #C(-2 -3))
               (#C(10562 -20642) #C(-1 2)) (#C(-30952 -41417) #C(3 4))
               (#C(-31004 52104) #C(3 -5)) (#C(52129 10532) #C(-5 -1))
               (#C(-51730 -41424) #C(5 4)) (#C(-20613 -51808) #C(2 5))
               (#C(-10214 41706) #C(1 -4)) (#C(-41368 -20633) #C(4 2))
               (#C(31403 31322) #C(-3 -3)) (#C(52153 20922) #C(-5 -2))
               (#C(-51736 -41419) #C(5 4)) (#C(10568 -20642) #C(-1 2))
               (#C(41741 -20641) #C(-4 2)) (#C(41743 -10251) #C(-4 1))
               (#C(-30944 -31024) #C(3 3)) (#C(20956 10538) #C(-2 -1))
               (#C(-41350 20931) #C(4 -2)) (#C(-30992 -51811) #C(3 5))
               (#C(-31001 31313) #C(3 -3)) (#C(20959 41709) #C(-2 -4))
               (#C(-10214 -41420) #C(1 4)) (#C(-51766 -20638) #C(5 2))
               (#C(52140 20923) #C(-5 -2)) (#C(31358 31314) #C(-3 -3))
               (#C(20956 31315) #C(-2 -3)) (#C(41789 -31031) #C(-4 3))
               (#C(-20585 -41415) #C(2 4)) (#C(31390 10539) #C(-3 -1))
               (#C(31370 20922) #C(-3 -2)) (#C(-30970 31322) #C(3 -3))
               (#C(41785 31320) #C(-4 -3)) (#C(-10162 -41415) #C(1 4))
               (#C(-20569 31320) #C(2 -3)) (#C(52177 41704) #C(-5 -4))
               (#C(21009 31317) #C(-2 -3)) (#C(31345 -41420) #C(-3 4))
               (#C(-41335 52099) #C(4 -5)) (#C(-51733 -20634) #C(5 2))
               (#C(-41345 -51811) #C(4 5)) (#C(-41368 -20638) #C(4 2))
               (#C(-10203 -41424) #C(1 4)) (#C(-20597 -51809) #C(2 5))
               (#C(-51778 -41418) #C(5 4)) (#C(31400 41704) #C(-3 -4))
               (#C(41734 -31029) #C(-4 3)) (#C(52184 -31029) #C(-5 3))
               (#C(20967 41707) #C(-2 -4)) (#C(-51746 31315) #C(5 -3))
               (#C(10600 -41417) #C(-1 4)) (#C(41775 -31030) #C(-4 3))
               (#C(21010 -41415) #C(-2 4)) (#C(-10166 41707) #C(1 -4))
               (#C(52166 41708) #C(-5 -4)) (#C(-41355 -31027) #C(4 3))
               (#C(-20597 -31028) #C(2 3)) (#C(31355 31313) #C(-3 -3))
               (#C(-30972 -41422) #C(3 4)) (#C(-51725 20922) #C(5 -2))
               (#C(31382 20930) #C(-3 -2)) (#C(-30946 -51811) #C(3 5))
               (#C(52132 -20640) #C(-5 2)) (#C(-10177 -51814) #C(1 5))
               (#C(10605 -20633) #C(-1 2)) (#C(31376 -20642) #C(-3 2))
               (#C(-20573 52095) #C(2 -5)) (#C(-41358 52096) #C(4 -5))
               (#C(-10218 -41415) #C(1 4)) (#C(52180 31321) #C(-5 -3))
               (#C(10605 20927) #C(-1 -2)) (#C(-20557 -41418) #C(2 4))
               (#C(52164 20928) #C(-5 -2)) (#C(10565 10539) #C(-1 -1))
               (#C(31395 -51815) #C(-3 5)) (#C(20967 -20635) #C(-2 2))
               (#C(20967 10538) #C(-2 -1)) (#C(10562 10535) #C(-1 -1))
               (#C(-20605 20925) #C(2 -2)) (#C(-30948 -31024) #C(3 3))
               (#C(-10206 52099) #C(1 -5)) (#C(-10217 -51810) #C(1 5))
               (#C(10596 10531) #C(-1 -1)) (#C(20977 -51810) #C(-2 5))
               (#C(-10213 -10247) #C(1 1)) (#C(31378 -10242) #C(-3 1))
               (#C(10580 -51811) #C(-1 5)) (#C(-30999 41710) #C(3 -4))
               (#C(-41387 31318) #C(4 -3)) (#C(31374 52096) #C(-3 -5))
               (#C(52169 10531) #C(-5 -1)) (#C(-30994 -31029) #C(3 3))
               (#C(41777 -41416) #C(-4 4)) (#C(21004 -31024) #C(-2 3))
               (#C(41736 -20633) #C(-4 2)) (#C(10579 20922) #C(-1 -2))
               (#C(-41387 -51808) #C(4 5)) (#C(-20561 10534) #C(2 -1))
               (#C(-51728 -31033) #C(5 3)) (#C(31352 20922) #C(-3 -2))
               (#C(-30944 41704) #C(3 -4)) (#C(52135 41708) #C(-5 -4))
               (#C(-30948 -10242) #C(3 1)) (#C(-20568 -41423) #C(2 4))
               (#C(41753 -31033) #C(-4 3)) (#C(31360 52095) #C(-3 -5))
               (#C(-41338 31317) #C(4 -3)) (#C(20975 20922) #C(-2 -2))
               (#C(20951 41706) #C(-2 -4)) (#C(-51746 -20639) #C(5 2))
               (#C(10587 -10247) #C(-1 1)) (#C(-51778 -20638) #C(5 2))
               (#C(-51741 20925) #C(5 -2)) (#C(10605 41710) #C(-1 -4))
               (#C(-51781 52100) #C(5 -5)) (#C(10600 31314) #C(-1 -3))
               (#C(-51778 -31025) #C(5 3)) (#C(-51778 -41418) #C(5 4))
               (#C(10592 -10248) #C(-1 1)) (#C(-10177 20924) #C(1 -2))
               (#C(-10185 31321) #C(1 -3)) (#C(20987 -41415) #C(-2 4))
               (#C(-10211 52095) #C(1 -5)) (#C(20986 -10251) #C(-2 1))
               (#C(-10218 -41424) #C(1 4)) (#C(-10181 31314) #C(1 -3))
               (#C(-51760 -31028) #C(5 3)) (#C(41759 -41415) #C(-4 4))
               (#C(-30954 -51811) #C(3 5)) (#C(-31004 20922) #C(3 -2))
               (#C(52164 52100) #C(-5 -5)) (#C(-30964 -31031) #C(3 3))
               (#C(31358 -41420) #C(-3 4)) (#C(52141 41704) #C(-5 -4))
               (#C(10585 -51815) #C(-1 5)) (#C(-20557 -51812) #C(2 5))
               (#C(-10169 -10251) #C(1 1)) (#C(10576 52095) #C(-1 -5))
               (#C(-10170 41707) #C(1 -4)) (#C(31363 -41424) #C(-3 4))
               (#C(-41339 20927) #C(4 -2)) (#C(-30978 52095) #C(3 -5))
               (#C(-51786 -10245) #C(5 1)) (#C(-41371 31322) #C(4 -3))
               (#C(-30996 20925) #C(3 -2)) (#C(31374 20930) #C(-3 -2))
               (#C(52175 -10246) #C(-5 1)) (#C(31374 41710) #C(-3 -4))
               (#C(-10182 52099) #C(1 -5)) (#C(-10206 41713) #C(1 -4))
               (#C(-20557 -31026) #C(2 3)) (#C(31377 52104) #C(-3 -5))
               (#C(10608 -41424) #C(-1 4)) (#C(-30964 -20638) #C(3 2))
               (#C(-51741 -10243) #C(5 1)) (#C(52156 31321) #C(-5 -3))
               (#C(31354 31313) #C(-3 -3)) (#C(20980 20922) #C(-2 -2))
               (#C(-20556 -10242) #C(2 1)) (#C(52129 -20636) #C(-5 2))
               (#C(20976 41704) #C(-2 -4)) (#C(-10198 41712) #C(1 -4))
               (#C(31394 -41417) #C(-3 4)) (#C(-20573 52098) #C(2 -5))
               (#C(-41350 20928) #C(4 -2)) (#C(52156 10532) #C(-5 -1))
               (#C(-31002 20926) #C(3 -2)) (#C(-30999 10534) #C(3 -1))
               (#C(52177 52104) #C(-5 -5)) (#C(-30978 31322) #C(3 -3))
               (#C(-30959 31318) #C(3 -3)) (#C(-51741 -31031) #C(5 3))
               (#C(31344 -10242) #C(-3 1)) (#C(-41386 -10251) #C(4 1))
               (#C(41738 -10243) #C(-4 1)) (#C(41778 -10245) #C(-4 1))
               (#C(41774 -41422) #C(-4 4)) (#C(-10166 20927) #C(1 -2))
               (#C(21011 41708) #C(-2 -4)) (#C(-30988 -31027) #C(3 3))
               (#C(-41339 -51815) #C(4 5)) (#C(31385 -10245) #C(-3 1))
               (#C(-41369 52095) #C(4 -5)) (#C(52129 10533) #C(-5 -1))
               (#C(21010 -41424) #C(-2 4)) (#C(-30964 10533) #C(3 -1)))
#+end_example
** Tests
#+BEGIN_SRC lisp :results output :exports both
  (defparameter *test-case* (mapcar #'parse-line
                                    (list "position=< 9,  1> velocity=< 0,  2>"
                                          "position=< 7,  0> velocity=<-1,  0>"
                                          "position=< 3, -2> velocity=<-1,  1>"
                                          "position=< 6, 10> velocity=<-2, -1>"
                                          "position=< 2, -4> velocity=< 2,  2>"
                                          "position=<-6, 10> velocity=< 2, -2>"
                                          "position=< 1,  8> velocity=< 1, -1>"
                                          "position=< 1,  7> velocity=< 1,  0>"
                                          "position=<-3, 11> velocity=< 1, -2>"
                                          "position=< 7,  6> velocity=<-1, -1>"
                                          "position=<-2,  3> velocity=< 1,  0>"
                                          "position=<-4,  3> velocity=< 2,  0>"
                                          "position=<10, -3> velocity=<-1,  1>"
                                          "position=< 5, 11> velocity=< 1, -2>"
                                          "position=< 4,  7> velocity=< 0, -1>"
                                          "position=< 8, -2> velocity=< 0,  1>"
                                          "position=<15,  0> velocity=<-2,  0>"
                                          "position=< 1,  6> velocity=< 1,  0>"
                                          "position=< 8,  9> velocity=< 0, -1>"
                                          "position=< 3,  3> velocity=<-1,  1>"
                                          "position=< 0,  5> velocity=< 0, -1>"
                                          "position=<-2,  2> velocity=< 2,  0>"
                                          "position=< 5, -2> velocity=< 1,  2>"
                                          "position=< 1,  4> velocity=< 2,  1>"
                                          "position=<-2,  7> velocity=< 2, -2>"
                                          "position=< 3,  6> velocity=<-1, -1>"
                                          "position=< 5,  0> velocity=< 1,  0>"
                                          "position=<-6,  0> velocity=< 2,  0>"
                                          "position=< 5,  9> velocity=< 1, -2>"
                                          "position=<14,  7> velocity=<-2,  0>"
                                          "position=<-3,  6> velocity=< 2, -1>")))
  ;; (format t "~{~A~%~}~%" *test-case*)
  (let ((lights *test-case*))
    (iter (for i from 0 to 2)
          (format t "Time ~A:~%" i)
          (setf lights (increment-lights lights)))
    (print-lights lights))

#+END_SRC

#+RESULTS:
#+begin_example
Time 0:
Time 1:
Time 2:
#...#..###
#...#...#.
#...#...#.
#####...#.
#...#...#.
#...#...#.
#...#...#.
#...#..###
#+end_example

#+NAME: tests
#+BEGIN_SRC lisp :results output
  (def-suite suite-2018.10)
  (in-suite suite-2018.10)

  (run! 'suite-2018.10)
#+END_SRC
** Thoughts
